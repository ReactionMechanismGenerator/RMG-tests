#!/bin/bash

test_case=$1
scoop_test=$2

set -e

if [ -z ${RMG_BENCHMARK+x} ]; then
  echo "RMG variable is unset. Exiting..."
  exit 1
fi

export ORIGIN_PYTHONPATH=$PYTHONPATH
echo "ORIGIN_PYTHONPATH=$ORIGIN_PYTHONPATH" >> $GITHUB_ENV
echo "Running $1 test case"

###########
#BENCHMARK#
###########
# make folder for models generated by the benchmark version of RMG-Py/RMG-database:
mkdir -p $BASE_DIR/results/benchmark/$test_case
rm -rf $BASE_DIR/results/benchmark/$test_case/*
cp $BASE_DIR/tests/$test_case/input.py $BASE_DIR/results/benchmark/$test_case/input.py

source "$BASE_DIR/.bash_profile"
conda activate $BENCHMARK_CONDA_ENV

echo "Benchmark code directory: "$RMG_BENCHMARK
export PYTHONPATH=$RMG_BENCHMARK:$ORIGIN_PYTHONPATH
echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

rm -rf ${RMG_BENCHMARK}/rmgpy/rmgrc
rmgrc="database.directory : "${RMGDB_BENCHMARK}/input/
echo $rmgrc >> ${RMG_BENCHMARK}/rmgpy/rmgrc

echo "Running benchmark job"
if timeout 570 python-jl $RMG_BENCHMARK/rmg.py $BASE_DIR/results/benchmark/$test_case/input.py > /dev/null
then
  echo "Benchmark job completed"
else
  echo "Benchmark job timed out"
fi

conda deactivate
export PYTHONPATH=$ORIGIN_PYTHONPATH
echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

#########
#TESTING#
#########
# make folder for models generated by the test version of RMG-Py and RMG-database:
mkdir -p $BASE_DIR/results/testmodel/$test_case
rm -rf $BASE_DIR/results/testmodel/$test_case/*
cp $BASE_DIR/tests/$test_case/input.py $BASE_DIR/results/testmodel/$test_case/input.py

conda activate $TESTING_CONDA_ENV

echo "Testing code directory: "$RMG_TESTING
export PYTHONPATH=$RMG_TESTING:$ORIGIN_PYTHONPATH
echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

rm -rf ${RMG_TESTING}/rmgpy/rmgrc
rmgrc="database.directory : "${RMGDB_TESTING}/input/
echo $rmgrc >> ${RMG_TESTING}/rmgpy/rmgrc

echo "Running testing job"
if timeout 570 python-jl $RMG_TESTING/rmg.py $BASE_DIR/results/testmodel/$test_case/input.py > /dev/null
then
  echo "Testing job completed"
else
  echo "Testing job timed out"
  exit 1
fi

conda deactivate
export PYTHONPATH=$ORIGIN_PYTHONPATH
echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

# compare both generated models
mkdir -p $BASE_DIR/results/check/$test_case
rm -rf $BASE_DIR/results/check/$test_case/*
cd $BASE_DIR/results/check/$test_case

conda activate $TESTING_CONDA_ENV

echo "Comparing results"
export PYTHONPATH=$RMG_TESTING:$ORIGIN_PYTHONPATH
echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

bash $BASE_DIR/check.sh $test_case $BASE_DIR/results/benchmark/$test_case $BASE_DIR/results/testmodel/$test_case

export PYTHONPATH=$ORIGIN_PYTHONPATH
echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
conda deactivate

if [ $scoop_test == "yes" ]; then
  # make folder for models generated by the test version of RMG-Py and RMG-database, with scoop enabled:
  mkdir -p $BASE_DIR/results/testmodel/$test_case/scoop
  rm -rf $BASE_DIR/results/testmodel/$test_case/scoop/*
  cp $BASE_DIR/tests/$test_case/input.py $BASE_DIR/results/testmodel/$test_case/scoop/input.py

  echo "Testing code directory: $RMG_TESTING"
  conda activate $TESTING_CONDA_ENV
  export PYTHONPATH=$RMG_TESTING:$ORIGIN_PYTHONPATH
  echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

  echo "Running test job with scoop"
  if timeout 570 python-jl -m scoop -n 1 $RMG_TESTING/rmg.py $BASE_DIR/results/testmodel/$test_case/scoop/input.py > /dev/null
  then
    echo "Testing job with scoop completed"
  else
    echo "Testing job with scoop timed out"
    exit 1
  fi

  export PYTHONPATH=$ORIGIN_PYTHONPATH
  echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
  conda deactivate

  # compare both generated models
  mkdir -p $BASE_DIR/results/check/$test_case/scoop
  cd $BASE_DIR/results/check/$test_case/scoop

  conda activate $BENCHMARK_CONDA_ENV
  export PYTHONPATH=$RMG_BENCHMARK:$ORIGIN_PYTHONPATH
  echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

  bash $BASE_DIR/check.sh $test_case $BASE_DIR/results/benchmark/$test_case $BASE_DIR/results/testmodel/$test_case/scoop

  export PYTHONPATH=$ORIGIN_PYTHONPATH
  echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
  conda deactivate
fi

# return to main directory
cd $BASE_DIR
